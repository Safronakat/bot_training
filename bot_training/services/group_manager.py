from aiogram import Bot
import logging

logger = logging.getLogger(__name__)

class GroupManager:
    def __init__(self, bot: Bot, admin_ids: list):
        self.bot = bot
        self.admin_ids = admin_ids
        self.existing_groups = {}  # –ö—ç—à —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø: {("level", "date"): chat_id}
    
    async def get_or_create_group(self, level: str, date: str) -> dict:
        """–ù–∞—Ö–æ–¥–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        group_key = (level, date)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        if group_key in self.existing_groups:
            return {"chat_id": self.existing_groups[group_key], "is_new": False}
        
        # –ë–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥—Ä—É–ø–ø—ã, –ø–æ—ç—Ç–æ–º—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        return await self.get_group_creation_instructions(level, date)
    
    async def get_group_creation_instructions(self, level: str, date: str) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
        group_title = f"{level} - {date}"
        
        instructions = (
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
            f"1. –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: '{group_title}'\n"
            f"2. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
            f"3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /set_group_id –≤ –≥—Ä—É–ø–ø–µ\n"
            f"4. –ò–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å ID –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–æ–≤"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        for admin_id in self.admin_ids:
            try:
                await self.bot.send_message(admin_id, instructions)
            except Exception as e:
                logger.error(f"Error sending instructions to admin {admin_id}: {e}")
        
        return {
            "needs_admin_action": True,
            "group_title": group_title,
            "instructions": "–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
        }
    
    async def add_user_to_group(self, level: str, date: str, user_id: int, user_data: dict, group_link: str = None) -> dict:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫—É –∏–ª–∏ —Å—Ç–∞–≤–∏—Ç –≤ –æ—á–µ—Ä–µ–¥—å"""
        try:
            if group_link:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                message_text = (
                    f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                    f"üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫—É—Ä—Å:\n"
                    f"üìö –£—Ä–æ–≤–µ–Ω—å: {level}\n"
                    f"üìÖ –î–∞—Ç–∞: {date}\n\n"
                    f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n{group_link}\n\n"
                    f"–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
                )
                
                try:
                    await self.bot.send_message(user_id, message_text)
                    
                    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                    await self.notify_admins_about_new_user(level, date, user_data, has_link=True)
                    
                    return {
                        "success": True, 
                        "status": "link_provided",
                        "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É"
                    }
                except Exception as e:
                    logger.error(f"Error sending group link to user: {e}")
                    return {"success": False, "error": f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É: {e}"}
            
            else:
                # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                message_text = (
                    f"‚úÖ –í–∞—à–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
                    f"üìö –£—Ä–æ–≤–µ–Ω—å: {level}\n"
                    f"üìÖ –î–∞—Ç–∞: {date}\n\n"
                    f"–ì—Ä—É–ø–ø–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. "
                    f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —É—á–µ–±–Ω—É—é –≥—Ä—É–ø–ø—É."
                )
                
                await self.bot.send_message(user_id, message_text)
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É
                await self.notify_admins_about_new_user(level, date, user_data, has_link=False)
                
                return {
                    "success": True, 
                    "status": "pending_admin_action",
                    "message": "–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
                }
                
        except Exception as e:
            logger.error(f"Error in add_user_to_group: {e}")
            return {"success": False, "error": str(e)}
    
    async def notify_admins_about_new_user(self, level: str, date: str, user_data: dict, has_link: bool = False):
        """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–µ"""
        if has_link:
            message_text = (
                f"‚úÖ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ —Å—Å—ã–ª–∫–µ:\n"
                f"üë§ –§–ò–û: {user_data['full_name']}\n"
                f"üèô –ì–æ—Ä–æ–¥: {user_data['city']}\n"
                f"üìö –£—Ä–æ–≤–µ–Ω—å: {level}\n"
                f"üìÖ –î–∞—Ç–∞: {date}\n"
                f"üîó –ì—Ä—É–ø–ø–∞: –ø–æ —Å—Å—ã–ª–∫–µ"
            )
        else:
            message_text = (
                f"üìã –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã:\n"
                f"üë§ –§–ò–û: {user_data['full_name']}\n"
                f"üèô –ì–æ—Ä–æ–¥: {user_data['city']}\n"
                f"üìö –£—Ä–æ–≤–µ–Ω—å: {level}\n"
                f"üìÖ –î–∞—Ç–∞: {date}\n\n"
                f"‚ùå –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!\n"
                f"–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –∏ –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞."
            )
        
        for admin_id in self.admin_ids:
            try:
                await self.bot.send_message(admin_id, message_text)
            except Exception as e:
                logger.error(f"Error notifying admin {admin_id}: {e}")
    
    async def set_group_id(self, level: str, date: str, chat_id: int):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≥—Ä—É–ø–ø—ã (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)"""
        group_key = (level, date)
        self.existing_groups[group_key] = chat_id
        logger.info(f"Group ID set for {level} - {date}: {chat_id}")
    
    async def send_group_info_to_user(self, user_id: int, group_info: dict):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ"""
        try:
            if group_info["success"]:
                if group_info.get("status") == "link_provided":
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É
                    message_text = (
                        f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                        f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
                        f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø–µ!"
                    )
                elif group_info.get("status") == "pending_admin_action":
                    # –ì—Ä—É–ø–ø–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞
                    message_text = (
                        f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
                        f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞—Å—Ç –≥—Ä—É–ø–ø—É –∏ –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n"
                        f"–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
                    )
                else:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
                    message_text = (
                        f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—É –æ–±—É—á–µ–Ω–∏—è!\n\n"
                        f"–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n"
                        f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! üéâ"
                    )
                
                await self.bot.send_message(user_id, message_text)
            else:
                await self.bot.send_message(
                    user_id, 
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –≥—Ä—É–ø–ø—É. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏."
                )
                
        except Exception as e:
            logger.error(f"Error sending group info to user: {e}")